// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Définition du modèle Utilisateur
model Utilisateur {
  id        Int       @id @default(autoincrement())
  nom       String
  email     String    @unique
  password  String?
  hashedPassword  String
  role      Role
  articles  Article[]
  createdAt DateTime  @default(now()) @updatedAt
  updatedAt DateTime  @default(now()) @updatedAt
}

// Définition du modèle Article
model Article {
  id                Int                @id @default(autoincrement())
  utilisateur       Utilisateur        @relation(fields: [utilisateurId], references: [id] , onDelete: Cascade)
  utilisateurId     Int
  titre             String
  contenu           String
  image             String?            @default("")
  createdAt         DateTime           @default(now()) @updatedAt
  updatedAt         DateTime           @default(now()) @updatedAt
  published         Boolean
  categories        Categorie[]
  commentaires      Commentaire[]
  articleCategories ArticleCategorie[]
}

// Définition du modèle Categorie
model Categorie {
  id                Int                @id @default(autoincrement())
  nom               String
  articles          Article[]
  articleCategories ArticleCategorie[]
}

// Définition du modèle Commentaire
model Commentaire {
  id        Int     @id @default(autoincrement())
  article   Article @relation(fields: [articleId], references: [id])
  articleId Int
  email     String
  contenu   String
}

// Définition du modèle ArticleCategorie
model ArticleCategorie {
  article     Article   @relation(fields: [articleId], references: [id])
  articleId   Int
  categorie   Categorie @relation(fields: [categorieId], references: [id])
  categorieId Int

  @@id([articleId, categorieId])
}

// Définition du type énuméré Role
enum Role {
  ADMIN
  AUTHOR
}
